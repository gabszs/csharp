// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcIdentity.Context;

#nullable disable

namespace MvcIdentity.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MvcIdentity.Entities.GameRecord", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"));

                    b.Property<string>("Against")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("WinOrLoose")
                        .HasColumnType("bit");

                    b.HasKey("MatchId");

                    b.ToTable("GameRecords");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            Against = "Computer",
                            Duration = new TimeSpan(0, 0, 5, 0, 0),
                            GameName = "Jokenpo",
                            TimeRecord = new DateTime(2023, 4, 27, 19, 18, 17, 0, DateTimeKind.Unspecified),
                            WinOrLoose = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
